
## Sensu stack

sensu-api:
  build: 'sensu-api'
  environment:
    - API_PASS=
    - API_USER=
  links:
    - rabbitmq
    - redis
  restart: always

sensu-client:
  build: 'sensu-client'
  #deployment_strategy: every_node
  links:
    - rabbitmq
  restart: always

rabbitmq:
  image: 'tutum/rabbitmq:latest'
  environment:
    - RABBITMQ_PASS=
    - RABBITMQ_USER=
  ports:
    - '5672:5672'
  restart: always

redis:
  image: 'tutum/redis:latest'
  environment:
    - REDIS_PASS=
  restart: always

sensu-server:
  build: 'sensu-server'
  environment:
    - SLACK_WEBHOOK_URL=
    - SLACK_ICON_URL=http://sensuapp.org/img/sensu_logo_large-c92d73db.png
    - 'SLACK_EMOJI=:screamcat:'
    - MAILGUN_APIKEY=
    - MAILGUN_DOMAIN=
    - MAILGUN_FROM=
    - MAILGUN_TO=
  links:
    - rabbitmq
    - redis
    - sensu-api
  restart: always

uchiwa:
  build: 'uchiwa'
  environment:
    - HTTP_PASS=
    - HTTP_USER=
  links:
    - sensu-api
  ports:
    - '3000:80'
  restart: always

## elasticsearch + logstash + logspout

elasticsearch:
  build: 'elasticsearch'
  ports:
    - '9200:9200'
  volumes:
    - ./elasticsearch/config:/data/config
    - /data/logs
    - /data/data
    - /data/plugins

logstash:
  image: 'logstash'
  command: 'logstash -e ''input { syslog { port => 5000 type => "docker" } } output { elasticsearch { hosts => "elasticsearch:9200" } }'''
  ports:
    - '5000:5000'
  links:
    - elasticsearch

logspout:
  image: 'gliderlabs/logspout'
  entrypoint: '/bin/sh'
  command: '-c "/bin/logspout syslog://logstash:5000"'
  #deployment_strategy: every_node
  volumes:
    - '/var/run/docker.sock:/tmp/docker.sock'
  links:
    - logstash
carbon-cache:
  image: 'dialonce/carbon-cache:latest'
  restart: always
